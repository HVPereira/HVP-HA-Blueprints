blueprint:
  name: HVP - Humidity Management using Dehumidifiers
  description: "# HVP - Humidity Management using Dehumidifiers\n\n
    Allows the control of humidity in your house. All the details and entries are self explanatory\n
    Designed for Comfee's and Midea's dehumidifiers.\n\nAutomations created with love and available on my [github](https://github.com/HVPereira/HVP-HA-Blueprints)\n"
  domain: automation
  input:
    motion_entity:
      name: Motion Sensor
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
    stop_when_motion:
      name: Stop if Motion Detected
      description: Select if you want the dehumidifier to be off during one hour after motion is detected
      default: false
      selector:
        boolean:
    humidifier_entity:
      name: Dehumidifier
      description: Select the dehumidifier to control!!!! :)
      selector:
        entity:
          domain: humidifier
    humidity_sensor_entity:
      name: Humidity Sensor
      selector:
        entity:
          domain: sensor
          device_class: humidity
    low_humidity:
      name: Low Humidity
      description: Considered the acceptable humidity when the humidifier turns off
      default: 65
      selector:
        number:
          min: 50
          max: 100
    high_humidity:
      name: High Humidity
      description: Considered the acceptable humidity when the humidifier turns on
      default: 69
      selector:
        number:
          min: 50
          max: 100
    time_off_entity:
      name: Time to Stop controlling humidity
      selector:
        time:
    time_on_entity:
      name: Time to Start controlling humidity
      selector:
        time:        
    tank_full_entity:
      name: Tank Full Sensor
      selector:
        entity:
          domain: binary_sensor
          device_class: problem
    echo_device:
      name: Alexa
      description: Alexa device to make the announcement on. Make a comma seperated list to announce on multiple devices.
      selector:
        entity:
          domain: media_player
    prohibited_mode:
      name: Prohibited Mode
      description: Do you have any mode that should prevent the dehumidifier to turn on? If so use this selector
      default: ""
      selector:
        entity:
          filter:
            domain: input_boolean
    no_notification_mode:
      name: No Notifications Mode
      description: Do you have any mode that should prevent the notifications?
      default:
      selector:
        entity:
          filter:
            domain: input_boolean
    display_text:
      name: Display Text
      description: Text for the Alexa Notification
mode: parallel
max: 10
trigger_variables:
  prohibited_mode_trigger: !input prohibited_mode
variables:
  prohibited_mode: !input prohibited_mode
  display_text: !input display_text
  no_notification_mode: !input no_notification_mode
  stop_when_motion: !input stop_when_motion
trigger:
  - platform: state
    entity_id:
      - !input motion_entity
    from: "off"
    to: "on"
    id: Presence
  - platform: state
    entity_id:
      - !input motion_entity
    to: 'off'
    for: '01:00:00'
    id: Check if Start again
  - platform: numeric_state
    entity_id: !input humidity_sensor_entity
    below: !input low_humidity
    for:
      minutes: 2
    id: Humidity Low
  - platform: numeric_state
    entity_id: !input humidity_sensor_entity
    above: !input high_humidity
    for:
      minutes: 2
    id: Humidity High
  - platform: time
    at: !input time_off_entity
    id: Humidity Time Off
  - platform: time
    at: !input time_on_entity
    id: Humidity Time On
  - platform: state
    entity_id:
      - !input tank_full_entity
    from: null
    to: "on"
    id: Tank Full
  - platform: template
    value_template: "{{ prohibited_mode_trigger is not none and is_state(prohibited_mode_trigger, 'on') }}"
    id: Prohibited On
condition: []
action:
  - choose:
      - conditions:
          - condition: or
            conditions:
              - condition: and
                conditions:
                  - condition: or
                    conditions:
                      - condition: trigger
                        id: Presence
                      - condition: trigger
                        id: Check if Start again
                  - condition: time
                    before: !input time_off_entity
                    after: !input time_on_entity
                    weekday:
                      - mon
                      - tue
                      - wed
                      - thu
                      - fri
                      - sat
                      - sun
                  - condition: numeric_state
                    entity_id: !input humidity_sensor_entity
                    above: !input high_humidity
                  - condition: template
                    value_template: "{{ prohibited_mode == none or is_state(prohibited_mode, 'off') }}"
              - condition: template
                value_template: "{{ not stop_when_motion }}"
            alias: Presence Start if required - High Humidity
        sequence:
          - service: humidifier.turn_on
            data: {}
            entity_id: !input humidifier_entity
      - conditions:
          - condition: or
            conditions:
              - condition: and
                conditions:
                  - condition: or
                    conditions:
                      - condition: trigger
                        id: Presence
                      - condition: trigger
                        id: Check if Start again
                  - condition: time
                    before: !input time_off_entity
                    after: !input time_on_entity
                    weekday:
                      - mon
                      - tue
                      - wed
                      - thu
                      - fri
                      - sat
                      - sun
                  - condition: numeric_state
                    entity_id: !input humidity_sensor_entity
                    below: !input low_humidity
                  - condition: template
                    value_template: "{{ prohibited_mode == none or is_state(prohibited_mode, 'off') }}"
              - condition: template
                value_template: "{{stop_when_motion }}"
            alias: Presence Stop if required - Low Humidity
        sequence:
          - service: humidifier.turn_off
            data: {}
            entity_id: !input humidifier_entity
      - conditions:
          - condition: and
            conditions:
              - condition: trigger
                id: Presence
              - condition: time
                before: !input time_off_entity
                after: !input time_on_entity
                weekday:
                  - mon
                  - tue
                  - wed
                  - thu
                  - fri
                  - sat
                  - sun
              - condition: state
                entity_id: !input tank_full_entity
                state: "on"
              - condition: template
                value_template: "{{ no_notification_mode == none or is_state(no_notification_mode, 'off') }}"
            alias: Notification
        sequence:
          - service: notify.alexa_media
            data:
              target: !input echo_device
              message: "{{ display_text }}"
              data:
                type: tts
          - delay:
              hours: 12
              minutes: 0
              seconds: 0
              milliseconds: 0
      - conditions:
          - condition: and
            conditions:
              - condition: trigger
                id: Humidity Time On
              - condition: numeric_state
                entity_id: !input humidity_sensor_entity
                above: !input high_humidity
              - condition: state
                entity_id: !input tank_full_entity
                state: "off"
              - condition: template
                value_template: "{{ prohibited_mode == none or is_state(prohibited_mode, 'off') }}"
            alias: Dehumidifier time to turn on?
        sequence:
          - service: humidifier.turn_on
            data: {}
            entity_id: !input humidifier_entity
      - conditions:
          - condition: trigger
            id: Humidity Time Off
            alias: Dehumidifier time to turn off?
        sequence:
          - service: humidifier.turn_off
            data: {}
            entity_id: !input humidifier_entity
      - conditions:
          - condition: and
            conditions:
              - condition: time
                after: !input time_on_entity
                before: !input time_off_entity
              - condition: trigger
                id: Humidity Low
            alias: Humidity Low Management - triggered by sensor
        sequence:
          - service: humidifier.turn_off
            data: {}
            entity_id: !input humidifier_entity
      - conditions:
          - condition: and
            conditions:
              - condition: time
                after: !input time_on_entity
                before: !input time_off_entity
              - condition: trigger
                id: Humidity High
                alias: Humidity So High
              - condition: state
                entity_id: !input tank_full_entity
                state: "off"
              - condition: template
                value_template: "{{ prohibited_mode == none or is_state(prohibited_mode, 'off') }}"
            alias: Humidity High Management - triggered by sensor
        sequence:
          - service: humidifier.turn_on
            data: {}
            entity_id: !input humidifier_entity
      - conditions:
          - alias: It's Full
            condition: or
            conditions:
              - condition: trigger
                id:
                  - Tank Full
              - condition: trigger
                id:
                  - Prohibited On
        sequence:
          - service: humidifier.turn_off
            target:
              entity_id: !input humidifier_entity
            data: {}
